# Licensed under the Apache License, Version 2.0 or the MIT License.
# SPDX-License-Identifier: Apache-2.0 OR MIT
# Copyright Tock Contributors 2023.

# This workflow contains all Treadmill-based hardware CI jobs.

name: treadmill-ci
env:
  TERM: xterm # Makes tput work in actions output

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push: # Run CI for all branches except GitHub merge queue tmp branches
    branches-ignore:
    - "gh-readonly-queue/**"
  pull_request: # Run CI for PRs on any branch
  merge_group: # Run CI for the GitHub merge queue

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# If you add additional jobs, remember to add them to bors.toml
permissions:
  contents: read
  actions: write

jobs:
  test-strategy:
    runs-on: ubuntu-latest

    outputs:
      treadmill-job-ids: ${{ steps.treadmill-job-launch.outputs.treadmill-job-ids }}

    steps:
      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - uses: actions/checkout@v4
        with:
          path: tock

      - name: Checkout Treadmill repository
        uses: actions/checkout@v4
        with:
          repository: treadmill-tb/treadmill
          path: treadmill

      - name: Compile the Treadmill CLI binary
        run: |
          pushd treadmill
          # cargo build --release --package tml-cli
          cargo build --debug --package tml-cli
          popd
          # echo "$PWD/treadmill/target/release" >> $GITHUB_PATH
          echo "$PWD/treadmill/debug/release" >> $GITHUB_PATH

      - name: Login to the Treadmill Switchboard
        run:
          tml login lschuermann ${{ secrets.TREADMILL_LOGIN_PASSWORD }}

      - name: Analyze changes and determine types of tests to run
        run: |
          echo "TODO: implement this!"

      - name: Generate a token to register new just-in-time runners
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.TREADMILL_GH_APP_CLIENT_ID }}
          private-key: ${{ secrets.TREADMILL_GH_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Create GitHub just-in-time runners and enqueue Treadmill jobs
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          SUB_TEST_ID="0"

          RUNNER_ID="tml-gh-actions-runner-${GITHUB_REPOSITORY_ID}-${GITHUB_RUN_ID}-${SUB_TEST_ID}"

          RUNNER_CONFIG_JSON="$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/treadmill-tb/tock/actions/runners/generate-jitconfig \
            -f "name=$RUNNER_ID" \
            -F "runner_group_id=1" \
            -f "labels[]=$RUNNER_ID" \
            -f "work_folder=_work")"

          echo "Generated configuration for runner $(echo "$RUNNER_CONFIG_JSON" | jq -r '.runner.name')"
          echo "Enqueueing treadmill job:"
          TML_JOB_PARAMETERS="{\"gh-actions-runner-encoded-jit-config\": {\"secret\": true, \"value\": \"$(echo "$RUNNER_CONFIG_JSON" | jq -r '.encoded_jit_config')\"}}"
          # echo "Parameters: $TML_JOB_PARAMETERS"
          tml job enqueue \
            0d01d28b9134b046f9d3ca2bc1942e40a2b04a1b44f08219bf5b259a95b88e36 \
            --tag-config 'supervisor:1bdc10a7-9bea-4da5-9e9c-02c046223dfb' \
            --ssh-keys 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFjLuM7C6emv+xAFYnXA+mSUKmMEmKDM0A6WzZ0HliFb cardno:23_559_180' \
            --parameters "$TML_JOB_PARAMETERS"

      - name: Launch Treadmill CI Jobs
        id: treadmill-job-launch
        run: |
          echo "change3"
          echo 'treadmill-job-ids=["cc627a0b-8c8d-4edc-8394-5bdeedcee60c", "e80dfe6c-1a13-4653-a3b2-e01aafdb990d"]' >> "$GITHUB_OUTPUT"

  # test-execute:
  #   needs: test-strategy

  #   strategy:
  #     matrix:
  #       treadmill-job-id: ${{ fromJSON(needs.test-strategy.outputs.treadmill-job-ids) }}

  #   runs-on: tml-ghactions-runner-${{ matrix.treadmill-job-id }}

  #   steps:
  #     - name: Print Treadmill Job Id
  #       run: |
  #         echo ${{ matrix.treadmill-job-id }}
